from dirkules.config import staticDir

from dirkules import db, app_version, app

from dirkules.samba.models import SambaGlobal


def set_samba_global(workgroup, name):
    """
    Sets the variables for the [global] part in smb.conf
    :param workgroup: Workgroup name
    :type workgroup: string
    :param name: Smbd server name
    :type name: string
    :return: nothing
    :rtype: None
    """
    SambaGlobal.query.delete()
    workgroup = SambaGlobal("workgroup", workgroup)
    name = SambaGlobal("server string", "%h {}".format(name))
    db.session.add(workgroup)
    db.session.add(name)
    db.session.commit()


def generate_smb():
    """
    Function is used to generate a new smb.conf file
    :return: nothing
    :rtype: None
    """
    if SambaGlobal.query.first() is None:
        app.logger.warning("Samba not configured. Using default fallback.")
        workgroup = 'WORKGROUP'
        server_string = '%h dirkules'
    else:
        workgroup = SambaGlobal.query.get(1)
        server_string = SambaGlobal.query.get(2)
    f = open("smb.conf.txt", "w")
    samba_global = open(staticDir + "/conf/samba_global.conf", "r")
    f.write("# This file was generated by dirkules v{}\n".format(app_version))
    f.write("")
    f.write("# Global Config\n")
    f.write("server string = {}\n".format(server_string))
    f.write("workgroup = {}\n".format(workgroup))
    f.write(samba_global.read())
    f.close()
    app.logger.info("Generated new samba config.")
